State 31 conflicts: 1 shift/reduce
State 32 conflicts: 1 shift/reduce
State 44 conflicts: 1 shift/reduce
State 74 conflicts: 1 shift/reduce
State 75 conflicts: 1 shift/reduce
State 122 conflicts: 1 shift/reduce
State 123 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog_start $end

    1 prog_start: functions

    2 functions: function functions
    3          | %empty

    4 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 declaration: identifiers COLON INTEGER
    6            | identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    7 declarations: declaration SEMICOLON declarations
    8             | %empty

    9 statement: var ASSIGN expression
   10          | IF bool_exp THEN statements ENDIF
   11          | IF bool_exp THEN statements ELSE statements ENDIF
   12          | WHILE bool_exp BEGINLOOP statements ENDLOOP
   13          | DO BEGINLOOP statements ENDLOOP WHILE bool_exp
   14          | FOR var ASSIGN number SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP
   15          | READ vars
   16          | WRITE vars
   17          | CONTINUE
   18          | RETURN expression

   19 statements: statement SEMICOLON statements
   20           | %empty

   21 bool_exp: relation_and_exp OR relation_and_exp
   22         | relation_and_exp

   23 relation_and_exp: relation_exp AND relation_exp
   24                 | relation_exp

   25 relation_exp: nots expression comp expression
   26             | TRUE
   27             | FALSE
   28             | L_PAREN bool_exp R_PAREN

   29 nots: NOT
   30     | %empty

   31 comp: EQ
   32     | NEQ
   33     | LT
   34     | GT
   35     | LTE
   36     | GTE

   37 expression: multiplicative_expression
   38           | multiplicative_expression ADD multiplicative_expression
   39           | multiplicative_expression SUB multiplicative_expression

   40 multiplicative_expression: term
   41                          | term MULT term
   42                          | term DIV term
   43                          | term MOD term

   44 term: NEG term_num
   45     | term_num
   46     | identifier L_PAREN expressions R_PAREN

   47 term_num: var
   48         | number
   49         | L_PAREN expression R_PAREN

   50 vars: var
   51     | var COMMA vars

   52 var: identifier L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   53    | identifier

   54 identifiers: identifier COMMA identifiers
   55            | identifier

   56 identifier: IDENT

   57 number: NUMBER

   58 expressions: expression COMMA expressions
   59            | expression
   60            | %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 4
SEMICOLON (259) 4 7 14 19
COLON (260) 5 6
COMMA (261) 51 54 58
IDENT (262) 56
NUMBER (263) 57
BEGIN_PARAMS (264) 4
END_PARAMS (265) 4
BEGIN_LOCALS (266) 4
END_LOCALS (267) 4
BEGIN_BODY (268) 4
INTEGER (269) 5 6
ARRAY (270) 6
L_SQUARE_BRACKET (271) 6 52
R_SQUARE_BRACKET (272) 6 52
IF (273) 10 11
THEN (274) 10 11
ENDIF (275) 10 11
ELSE (276) 11
WHILE (277) 12 13
OF (278) 6
BEGINLOOP (279) 12 13 14
ENDLOOP (280) 12 13 14
READ (281) 15
WRITE (282) 16
CONTINUE (283) 17
RETURN (284) 18
OR (285) 21
AND (286) 23
GT (287) 34
LT (288) 33
NEQ (289) 32
LTE (290) 35
GTE (291) 36
L_PAREN (292) 28 46 49
R_PAREN (293) 28 46 49
TRUE (294) 26
FALSE (295) 27
FOR (296) 14
DO (297) 13
EQ (298) 31
END_BODY (299) 4
NOT (300) 29
ADD (301) 38
SUB (302) 39
DIV (303) 42
MULT (304) 41
MOD (305) 43
NEG (306) 44
ASSIGN (307) 9 14


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
prog_start (54)
    on left: 1, on right: 0
functions (55)
    on left: 2 3, on right: 1 2
function (56)
    on left: 4, on right: 2
declaration (57)
    on left: 5 6, on right: 7
declarations (58)
    on left: 7 8, on right: 4 7
statement (59)
    on left: 9 10 11 12 13 14 15 16 17 18, on right: 19
statements (60)
    on left: 19 20, on right: 4 10 11 12 13 14 19
bool_exp (61)
    on left: 21 22, on right: 10 11 12 13 14 28
relation_and_exp (62)
    on left: 23 24, on right: 21 22
relation_exp (63)
    on left: 25 26 27 28, on right: 23 24
nots (64)
    on left: 29 30, on right: 25
comp (65)
    on left: 31 32 33 34 35 36, on right: 25
expression (66)
    on left: 37 38 39, on right: 9 14 18 25 49 52 58 59
multiplicative_expression (67)
    on left: 40 41 42 43, on right: 37 38 39
term (68)
    on left: 44 45 46, on right: 40 41 42 43
term_num (69)
    on left: 47 48 49, on right: 44 45
vars (70)
    on left: 50 51, on right: 15 16 51
var (71)
    on left: 52 53, on right: 9 14 47 50 51
identifiers (72)
    on left: 54 55, on right: 5 6 54
identifier (73)
    on left: 56, on right: 4 46 52 53 54 55
number (74)
    on left: 57, on right: 6 14 48
expressions (75)
    on left: 58 59 60, on right: 46 58


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    prog_start  go to state 2
    functions   go to state 3
    function    go to state 4


State 1

    4 function: FUNCTION . identifier SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    identifier  go to state 6


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 7


State 3

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


State 4

    2 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    functions  go to state 8
    function   go to state 4


State 5

   56 identifier: IDENT .

    $default  reduce using rule 56 (identifier)


State 6

    4 function: FUNCTION identifier . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 9


State 7

    0 $accept: prog_start $end .

    $default  accept


State 8

    2 functions: function functions .

    $default  reduce using rule 2 (functions)


State 9

    4 function: FUNCTION identifier SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 10


State 10

    4 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 8 (declarations)

    declaration   go to state 11
    declarations  go to state 12
    identifiers   go to state 13
    identifier    go to state 14


State 11

    7 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 15


State 12

    4 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 16


State 13

    5 declaration: identifiers . COLON INTEGER
    6            | identifiers . COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 17


State 14

   54 identifiers: identifier . COMMA identifiers
   55            | identifier .

    COMMA  shift, and go to state 18

    $default  reduce using rule 55 (identifiers)


State 15

    7 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 5

    $default  reduce using rule 8 (declarations)

    declaration   go to state 11
    declarations  go to state 19
    identifiers   go to state 13
    identifier    go to state 14


State 16

    4 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 20


State 17

    5 declaration: identifiers COLON . INTEGER
    6            | identifiers COLON . ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 21
    ARRAY    shift, and go to state 22


State 18

   54 identifiers: identifier COMMA . identifiers

    IDENT  shift, and go to state 5

    identifiers  go to state 23
    identifier   go to state 14


State 19

    7 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 7 (declarations)


State 20

    4 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 8 (declarations)

    declaration   go to state 11
    declarations  go to state 24
    identifiers   go to state 13
    identifier    go to state 14


State 21

    5 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 5 (declaration)


State 22

    6 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 25


State 23

   54 identifiers: identifier COMMA identifiers .

    $default  reduce using rule 54 (identifiers)


State 24

    4 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 26


State 25

    6 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . number R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 27

    number  go to state 28


State 26

    4 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 29


State 27

   57 number: NUMBER .

    $default  reduce using rule 57 (number)


State 28

    6 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 30


State 29

    4 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IDENT     shift, and go to state 5
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    CONTINUE  shift, and go to state 35
    RETURN    shift, and go to state 36
    FOR       shift, and go to state 37
    DO        shift, and go to state 38

    $default  reduce using rule 20 (statements)

    statement   go to state 39
    statements  go to state 40
    var         go to state 41
    identifier  go to state 42


State 30

    6 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 43


State 31

   10 statement: IF . bool_exp THEN statements ENDIF
   11          | IF . bool_exp THEN statements ELSE statements ENDIF

    L_PAREN  shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    NOT      shift, and go to state 47

    L_PAREN   [reduce using rule 30 (nots)]
    $default  reduce using rule 30 (nots)

    bool_exp          go to state 48
    relation_and_exp  go to state 49
    relation_exp      go to state 50
    nots              go to state 51


State 32

   12 statement: WHILE . bool_exp BEGINLOOP statements ENDLOOP

    L_PAREN  shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    NOT      shift, and go to state 47

    L_PAREN   [reduce using rule 30 (nots)]
    $default  reduce using rule 30 (nots)

    bool_exp          go to state 52
    relation_and_exp  go to state 49
    relation_exp      go to state 50
    nots              go to state 51


State 33

   15 statement: READ . vars

    IDENT  shift, and go to state 5

    vars        go to state 53
    var         go to state 54
    identifier  go to state 42


State 34

   16 statement: WRITE . vars

    IDENT  shift, and go to state 5

    vars        go to state 55
    var         go to state 54
    identifier  go to state 42


State 35

   17 statement: CONTINUE .

    $default  reduce using rule 17 (statement)


State 36

   18 statement: RETURN . expression

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 27
    L_PAREN  shift, and go to state 56
    NEG      shift, and go to state 57

    expression                 go to state 58
    multiplicative_expression  go to state 59
    term                       go to state 60
    term_num                   go to state 61
    var                        go to state 62
    identifier                 go to state 63
    number                     go to state 64


State 37

   14 statement: FOR . var ASSIGN number SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 5

    var         go to state 65
    identifier  go to state 42


State 38

   13 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 66


State 39

   19 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 67


State 40

    4 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 68


State 41

    9 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 69


State 42

   52 var: identifier . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   53    | identifier .

    L_SQUARE_BRACKET  shift, and go to state 70

    $default  reduce using rule 53 (var)


State 43

    6 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 71


State 44

   28 relation_exp: L_PAREN . bool_exp R_PAREN

    L_PAREN  shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    NOT      shift, and go to state 47

    L_PAREN   [reduce using rule 30 (nots)]
    $default  reduce using rule 30 (nots)

    bool_exp          go to state 72
    relation_and_exp  go to state 49
    relation_exp      go to state 50
    nots              go to state 51


State 45

   26 relation_exp: TRUE .

    $default  reduce using rule 26 (relation_exp)


State 46

   27 relation_exp: FALSE .

    $default  reduce using rule 27 (relation_exp)


State 47

   29 nots: NOT .

    $default  reduce using rule 29 (nots)


State 48

   10 statement: IF bool_exp . THEN statements ENDIF
   11          | IF bool_exp . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 73


State 49

   21 bool_exp: relation_and_exp . OR relation_and_exp
   22         | relation_and_exp .

    OR  shift, and go to state 74

    $default  reduce using rule 22 (bool_exp)


State 50

   23 relation_and_exp: relation_exp . AND relation_exp
   24                 | relation_exp .

    AND  shift, and go to state 75

    $default  reduce using rule 24 (relation_and_exp)


State 51

   25 relation_exp: nots . expression comp expression

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 27
    L_PAREN  shift, and go to state 56
    NEG      shift, and go to state 57

    expression                 go to state 76
    multiplicative_expression  go to state 59
    term                       go to state 60
    term_num                   go to state 61
    var                        go to state 62
    identifier                 go to state 63
    number                     go to state 64


State 52

   12 statement: WHILE bool_exp . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 77


State 53

   15 statement: READ vars .

    $default  reduce using rule 15 (statement)


State 54

   50 vars: var .
   51     | var . COMMA vars

    COMMA  shift, and go to state 78

    $default  reduce using rule 50 (vars)


State 55

   16 statement: WRITE vars .

    $default  reduce using rule 16 (statement)


State 56

   49 term_num: L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 27
    L_PAREN  shift, and go to state 56
    NEG      shift, and go to state 57

    expression                 go to state 79
    multiplicative_expression  go to state 59
    term                       go to state 60
    term_num                   go to state 61
    var                        go to state 62
    identifier                 go to state 63
    number                     go to state 64


State 57

   44 term: NEG . term_num

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 27
    L_PAREN  shift, and go to state 56

    term_num    go to state 80
    var         go to state 62
    identifier  go to state 42
    number      go to state 64


State 58

   18 statement: RETURN expression .

    $default  reduce using rule 18 (statement)


State 59

   37 expression: multiplicative_expression .
   38           | multiplicative_expression . ADD multiplicative_expression
   39           | multiplicative_expression . SUB multiplicative_expression

    ADD  shift, and go to state 81
    SUB  shift, and go to state 82

    $default  reduce using rule 37 (expression)


State 60

   40 multiplicative_expression: term .
   41                          | term . MULT term
   42                          | term . DIV term
   43                          | term . MOD term

    DIV   shift, and go to state 83
    MULT  shift, and go to state 84
    MOD   shift, and go to state 85

    $default  reduce using rule 40 (multiplicative_expression)


State 61

   45 term: term_num .

    $default  reduce using rule 45 (term)


State 62

   47 term_num: var .

    $default  reduce using rule 47 (term_num)


State 63

   46 term: identifier . L_PAREN expressions R_PAREN
   52 var: identifier . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   53    | identifier .

    L_SQUARE_BRACKET  shift, and go to state 70
    L_PAREN           shift, and go to state 86

    $default  reduce using rule 53 (var)


State 64

   48 term_num: number .

    $default  reduce using rule 48 (term_num)


State 65

   14 statement: FOR var . ASSIGN number SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 87


State 66

   13 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_exp

    IDENT     shift, and go to state 5
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    CONTINUE  shift, and go to state 35
    RETURN    shift, and go to state 36
    FOR       shift, and go to state 37
    DO        shift, and go to state 38

    $default  reduce using rule 20 (statements)

    statement   go to state 39
    statements  go to state 88
    var         go to state 41
    identifier  go to state 42


State 67

   19 statements: statement SEMICOLON . statements

    IDENT     shift, and go to state 5
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    CONTINUE  shift, and go to state 35
    RETURN    shift, and go to state 36
    FOR       shift, and go to state 37
    DO        shift, and go to state 38

    $default  reduce using rule 20 (statements)

    statement   go to state 39
    statements  go to state 89
    var         go to state 41
    identifier  go to state 42


State 68

    4 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


State 69

    9 statement: var ASSIGN . expression

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 27
    L_PAREN  shift, and go to state 56
    NEG      shift, and go to state 57

    expression                 go to state 90
    multiplicative_expression  go to state 59
    term                       go to state 60
    term_num                   go to state 61
    var                        go to state 62
    identifier                 go to state 63
    number                     go to state 64


State 70

   52 var: identifier L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 27
    L_PAREN  shift, and go to state 56
    NEG      shift, and go to state 57

    expression                 go to state 91
    multiplicative_expression  go to state 59
    term                       go to state 60
    term_num                   go to state 61
    var                        go to state 62
    identifier                 go to state 63
    number                     go to state 64


State 71

    6 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 6 (declaration)


State 72

   28 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 92


State 73

   10 statement: IF bool_exp THEN . statements ENDIF
   11          | IF bool_exp THEN . statements ELSE statements ENDIF

    IDENT     shift, and go to state 5
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    CONTINUE  shift, and go to state 35
    RETURN    shift, and go to state 36
    FOR       shift, and go to state 37
    DO        shift, and go to state 38

    $default  reduce using rule 20 (statements)

    statement   go to state 39
    statements  go to state 93
    var         go to state 41
    identifier  go to state 42


State 74

   21 bool_exp: relation_and_exp OR . relation_and_exp

    L_PAREN  shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    NOT      shift, and go to state 47

    L_PAREN   [reduce using rule 30 (nots)]
    $default  reduce using rule 30 (nots)

    relation_and_exp  go to state 94
    relation_exp      go to state 50
    nots              go to state 51


State 75

   23 relation_and_exp: relation_exp AND . relation_exp

    L_PAREN  shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    NOT      shift, and go to state 47

    L_PAREN   [reduce using rule 30 (nots)]
    $default  reduce using rule 30 (nots)

    relation_exp  go to state 95
    nots          go to state 51


State 76

   25 relation_exp: nots expression . comp expression

    GT   shift, and go to state 96
    LT   shift, and go to state 97
    NEQ  shift, and go to state 98
    LTE  shift, and go to state 99
    GTE  shift, and go to state 100
    EQ   shift, and go to state 101

    comp  go to state 102


State 77

   12 statement: WHILE bool_exp BEGINLOOP . statements ENDLOOP

    IDENT     shift, and go to state 5
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    CONTINUE  shift, and go to state 35
    RETURN    shift, and go to state 36
    FOR       shift, and go to state 37
    DO        shift, and go to state 38

    $default  reduce using rule 20 (statements)

    statement   go to state 39
    statements  go to state 103
    var         go to state 41
    identifier  go to state 42


State 78

   51 vars: var COMMA . vars

    IDENT  shift, and go to state 5

    vars        go to state 104
    var         go to state 54
    identifier  go to state 42


State 79

   49 term_num: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 105


State 80

   44 term: NEG term_num .

    $default  reduce using rule 44 (term)


State 81

   38 expression: multiplicative_expression ADD . multiplicative_expression

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 27
    L_PAREN  shift, and go to state 56
    NEG      shift, and go to state 57

    multiplicative_expression  go to state 106
    term                       go to state 60
    term_num                   go to state 61
    var                        go to state 62
    identifier                 go to state 63
    number                     go to state 64


State 82

   39 expression: multiplicative_expression SUB . multiplicative_expression

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 27
    L_PAREN  shift, and go to state 56
    NEG      shift, and go to state 57

    multiplicative_expression  go to state 107
    term                       go to state 60
    term_num                   go to state 61
    var                        go to state 62
    identifier                 go to state 63
    number                     go to state 64


State 83

   42 multiplicative_expression: term DIV . term

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 27
    L_PAREN  shift, and go to state 56
    NEG      shift, and go to state 57

    term        go to state 108
    term_num    go to state 61
    var         go to state 62
    identifier  go to state 63
    number      go to state 64


State 84

   41 multiplicative_expression: term MULT . term

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 27
    L_PAREN  shift, and go to state 56
    NEG      shift, and go to state 57

    term        go to state 109
    term_num    go to state 61
    var         go to state 62
    identifier  go to state 63
    number      go to state 64


State 85

   43 multiplicative_expression: term MOD . term

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 27
    L_PAREN  shift, and go to state 56
    NEG      shift, and go to state 57

    term        go to state 110
    term_num    go to state 61
    var         go to state 62
    identifier  go to state 63
    number      go to state 64


State 86

   46 term: identifier L_PAREN . expressions R_PAREN

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 27
    L_PAREN  shift, and go to state 56
    NEG      shift, and go to state 57

    $default  reduce using rule 60 (expressions)

    expression                 go to state 111
    multiplicative_expression  go to state 59
    term                       go to state 60
    term_num                   go to state 61
    var                        go to state 62
    identifier                 go to state 63
    number                     go to state 64
    expressions                go to state 112


State 87

   14 statement: FOR var ASSIGN . number SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    NUMBER  shift, and go to state 27

    number  go to state 113


State 88

   13 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_exp

    ENDLOOP  shift, and go to state 114


State 89

   19 statements: statement SEMICOLON statements .

    $default  reduce using rule 19 (statements)


State 90

    9 statement: var ASSIGN expression .

    $default  reduce using rule 9 (statement)


State 91

   52 var: identifier L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 115


State 92

   28 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 28 (relation_exp)


State 93

   10 statement: IF bool_exp THEN statements . ENDIF
   11          | IF bool_exp THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 116
    ELSE   shift, and go to state 117


State 94

   21 bool_exp: relation_and_exp OR relation_and_exp .

    $default  reduce using rule 21 (bool_exp)


State 95

   23 relation_and_exp: relation_exp AND relation_exp .

    $default  reduce using rule 23 (relation_and_exp)


State 96

   34 comp: GT .

    $default  reduce using rule 34 (comp)


State 97

   33 comp: LT .

    $default  reduce using rule 33 (comp)


State 98

   32 comp: NEQ .

    $default  reduce using rule 32 (comp)


State 99

   35 comp: LTE .

    $default  reduce using rule 35 (comp)


State 100

   36 comp: GTE .

    $default  reduce using rule 36 (comp)


State 101

   31 comp: EQ .

    $default  reduce using rule 31 (comp)


State 102

   25 relation_exp: nots expression comp . expression

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 27
    L_PAREN  shift, and go to state 56
    NEG      shift, and go to state 57

    expression                 go to state 118
    multiplicative_expression  go to state 59
    term                       go to state 60
    term_num                   go to state 61
    var                        go to state 62
    identifier                 go to state 63
    number                     go to state 64


State 103

   12 statement: WHILE bool_exp BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 119


State 104

   51 vars: var COMMA vars .

    $default  reduce using rule 51 (vars)


State 105

   49 term_num: L_PAREN expression R_PAREN .

    $default  reduce using rule 49 (term_num)


State 106

   38 expression: multiplicative_expression ADD multiplicative_expression .

    $default  reduce using rule 38 (expression)


State 107

   39 expression: multiplicative_expression SUB multiplicative_expression .

    $default  reduce using rule 39 (expression)


State 108

   42 multiplicative_expression: term DIV term .

    $default  reduce using rule 42 (multiplicative_expression)


State 109

   41 multiplicative_expression: term MULT term .

    $default  reduce using rule 41 (multiplicative_expression)


State 110

   43 multiplicative_expression: term MOD term .

    $default  reduce using rule 43 (multiplicative_expression)


State 111

   58 expressions: expression . COMMA expressions
   59            | expression .

    COMMA  shift, and go to state 120

    $default  reduce using rule 59 (expressions)


State 112

   46 term: identifier L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 121


State 113

   14 statement: FOR var ASSIGN number . SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 122


State 114

   13 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 123


State 115

   52 var: identifier L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 52 (var)


State 116

   10 statement: IF bool_exp THEN statements ENDIF .

    $default  reduce using rule 10 (statement)


State 117

   11 statement: IF bool_exp THEN statements ELSE . statements ENDIF

    IDENT     shift, and go to state 5
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    CONTINUE  shift, and go to state 35
    RETURN    shift, and go to state 36
    FOR       shift, and go to state 37
    DO        shift, and go to state 38

    $default  reduce using rule 20 (statements)

    statement   go to state 39
    statements  go to state 124
    var         go to state 41
    identifier  go to state 42


State 118

   25 relation_exp: nots expression comp expression .

    $default  reduce using rule 25 (relation_exp)


State 119

   12 statement: WHILE bool_exp BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 12 (statement)


State 120

   58 expressions: expression COMMA . expressions

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 27
    L_PAREN  shift, and go to state 56
    NEG      shift, and go to state 57

    $default  reduce using rule 60 (expressions)

    expression                 go to state 111
    multiplicative_expression  go to state 59
    term                       go to state 60
    term_num                   go to state 61
    var                        go to state 62
    identifier                 go to state 63
    number                     go to state 64
    expressions                go to state 125


State 121

   46 term: identifier L_PAREN expressions R_PAREN .

    $default  reduce using rule 46 (term)


State 122

   14 statement: FOR var ASSIGN number SEMICOLON . bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    L_PAREN  shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    NOT      shift, and go to state 47

    L_PAREN   [reduce using rule 30 (nots)]
    $default  reduce using rule 30 (nots)

    bool_exp          go to state 126
    relation_and_exp  go to state 49
    relation_exp      go to state 50
    nots              go to state 51


State 123

   13 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_exp

    L_PAREN  shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    NOT      shift, and go to state 47

    L_PAREN   [reduce using rule 30 (nots)]
    $default  reduce using rule 30 (nots)

    bool_exp          go to state 127
    relation_and_exp  go to state 49
    relation_exp      go to state 50
    nots              go to state 51


State 124

   11 statement: IF bool_exp THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 128


State 125

   58 expressions: expression COMMA expressions .

    $default  reduce using rule 58 (expressions)


State 126

   14 statement: FOR var ASSIGN number SEMICOLON bool_exp . SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 129


State 127

   13 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_exp .

    $default  reduce using rule 13 (statement)


State 128

   11 statement: IF bool_exp THEN statements ELSE statements ENDIF .

    $default  reduce using rule 11 (statement)


State 129

   14 statement: FOR var ASSIGN number SEMICOLON bool_exp SEMICOLON . var ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 5

    var         go to state 130
    identifier  go to state 42


State 130

   14 statement: FOR var ASSIGN number SEMICOLON bool_exp SEMICOLON var . ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 131


State 131

   14 statement: FOR var ASSIGN number SEMICOLON bool_exp SEMICOLON var ASSIGN . expression BEGINLOOP statements ENDLOOP

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 27
    L_PAREN  shift, and go to state 56
    NEG      shift, and go to state 57

    expression                 go to state 132
    multiplicative_expression  go to state 59
    term                       go to state 60
    term_num                   go to state 61
    var                        go to state 62
    identifier                 go to state 63
    number                     go to state 64


State 132

   14 statement: FOR var ASSIGN number SEMICOLON bool_exp SEMICOLON var ASSIGN expression . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 133


State 133

   14 statement: FOR var ASSIGN number SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP . statements ENDLOOP

    IDENT     shift, and go to state 5
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    CONTINUE  shift, and go to state 35
    RETURN    shift, and go to state 36
    FOR       shift, and go to state 37
    DO        shift, and go to state 38

    $default  reduce using rule 20 (statements)

    statement   go to state 39
    statements  go to state 134
    var         go to state 41
    identifier  go to state 42


State 134

   14 statement: FOR var ASSIGN number SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 135


State 135

   14 statement: FOR var ASSIGN number SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 14 (statement)
